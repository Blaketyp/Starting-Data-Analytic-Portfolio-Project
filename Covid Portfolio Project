--Data I am going to be using
select * from coviddeaths


--Looking at Total cases vs Total deaths
--Shows likelihood of dying if you contract covid in Malaysia


select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
from coviddeaths
where location = 'Malaysia'


--Looking at Total cases vs population
--Shows what percentage of population got covid


select location, date, total_cases, population, (total_cases/population)*100 as PopulationPercentageInfected
from coviddeaths
where location = 'Malaysia'


--Looking at Countries with highest infection rate compared to population


select location, max(total_cases) as HighestInfectionCount, population, max((total_cases/population))*100 as PopulationPercentageInfected
from coviddeaths
where not(total_cases is null or population is null or continent is null)
group by location, population
order by PopulationPercentageInfected desc


--Showing Countries with Highest Death Count per population


select location, max(total_deaths) as TotalDeathCount
from coviddeaths
where not(total_deaths is null or continent is null)
group by location
order by TotalDeathCount desc


--Showing contintents with the highest death counts per population


select continent, max(total_deaths) as TotalDeathCount
from coviddeaths
where continent is not null
group by continent
order by TotalDeathCount desc


--Global numbers


select sum(new_cases) as total_cases, sum(cast(new_deaths as int)) as total_deaths, sum(cast(new_deaths as int))/sum(new_cases)*100 as DeathPercentage
from coviddeaths
where continent is not null
order by 1,2


--Looking at Total population vs vaccinations


Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, sum(vac.new_vaccinations) over (partition by dea.location order by dea.location,dea.date) as RollingPeopleVaccinated
from coviddeaths dea
join covidvaccination vac
	on dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null
order by 2,3


--Use CTE


with popvsvac (continent,location,date,population,new_vaccinations,rollingpeoplevaccinated)
as
(
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, sum(vac.new_vaccinations) over (partition by dea.location order by dea.location,dea.date) as RollingPeopleVaccinated
from coviddeaths dea
join covidvaccination vac
	on dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null
order by 2,3
)
select *, (RollingPeopleVaccinated/Population)*100
from PopvsVac


--TEMP table



Create temp table PercentPopulationVaccinated
(
Continent varchar(255),
Location varchar(255),
Date date,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
);
Insert into PercentPopulationVaccinated
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, sum(vac.new_vaccinations) over (partition by dea.location order by dea.location,dea.date) as RollingPeopleVaccinated
from coviddeaths dea
join covidvaccination vac
	on dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null
order by 2,3;

select *, (RollingPeopleVaccinated/Population)*100
from PercentPopulationVaccinated


--Creating view to store date for later visualizations


create view PercentPopulationVaccinated as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, sum(vac.new_vaccinations) over (partition by dea.location order by dea.location,dea.date) as RollingPeopleVaccinated
from coviddeaths dea
join covidvaccination vac
	on dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null
order by 2,3